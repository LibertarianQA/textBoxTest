plugins {
    id 'java-library'
    id('io.qameta.allure') version '2.11.2'
}
def allureVersion = "2.19.0",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:7.2.1',
            'org.junit.jupiter:junit-jupiter:5.9.1',
            'org.slf4j:slf4j-simple:2.0.6',
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.25.0'

    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


task simple_test(type: Test ){
    systemProperties(System.getProperties())
    useJUnitPlatform(){
        includeTags("simple")
    }
}

task print(type: Test ){
    useJUnitPlatform(){
        includeTags("print")
    }
}